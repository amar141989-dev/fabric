#https://hyperledger-fabric.readthedocs.io/en/latest/install.html
cd /Users/amarjeet.p_hoo/Projects/cbdc/fabric
curl -sSLO https://raw.githubusercontent.com/hyperledger/fabric/main/scripts/install-fabric.sh && chmod +x install-fabric.sh
./install-fabric.sh docker samples binary

cd fabric-samples/test-network
./network.sh down

#git clone https://github.com/hyperledger/fabric-chaincode-java.git 
./network.sh up -ca -s couchdb
#./monitordocker.sh fabric_test
./network.sh createChannel -c samplechannel
docker exec peer0.org1.example.com peer channel list

source ~/.zprofile #in order to make below command work

#Configure org 1 
source ../../lifecycle_setup_org1.sh

# Package chain code
peer lifecycle chaincode package Carshowroom.tar.gz --path ../../chaincode/Carshowroom/build/install/Carshowroom --lang java --label Carshowroom_1 

#Install chain code to org 1 peer 
peer lifecycle chaincode install Carshowroom.tar.gz --peerAddresses localhost:7051 --tlsRootCertFiles $CORE_PEER_TLS_ROOTCERT_FILE

#Check if chain code installed in org 1
peer lifecycle chaincode queryinstalled --peerAddresses localhost:7051 --tlsRootCertFiles $CORE_PEER_TLS_ROOTCERT_FILE

#package id is "name:hashcode"
export PACKAGE_ID=Carshowroom_1:17c0d23c3949e3d0fece199ef01a807ff58d9ad7d448cdd3e0e293b58535bc42

#source ~/.zprofile
source ../../lifecycle_setup_org2.sh

#Install chain code to org 2 peer 
peer lifecycle chaincode install Carshowroom.tar.gz --peerAddresses localhost:9051 --tlsRootCertFiles $CORE_PEER_TLS_ROOTCERT_FILE

#Check if chain code installed in org 2
peer lifecycle chaincode queryinstalled --peerAddresses localhost:9051 --tlsRootCertFiles $CORE_PEER_TLS_ROOTCERT_FILE

#Approve installed chaincode for org 1
source ../../lifecycle_setup_org1.sh
peer lifecycle chaincode approveformyorg -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --tls --cafile $ORDERER_CA -C samplechannel --name Carshowroom --version 1.0 --init-required --package-id $PACKAGE_ID --sequence 1

#Approve installed chaincode for org 2
source ../../lifecycle_setup_org2.sh
peer lifecycle chaincode approveformyorg -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --tls --cafile $ORDERER_CA -C samplechannel --name Carshowroom --version 1.0 --init-required --package-id $PACKAGE_ID --sequence 1

#Commit, installed and approved chaincode for org 1
source ../../lifecycle_setup_org1.sh
peer lifecycle chaincode checkcommitreadiness -C samplechannel --name Carshowroom --version 1.0  --sequence 1 --output json --init-required

#Commit, installed and approved chaincode for org 2
source ../../lifecycle_setup_org2.sh
peer lifecycle chaincode checkcommitreadiness -C samplechannel --name Carshowroom --version 1.0  --sequence 1 --output json --init-required

source ../../lifecycle_setup_commit_channel.sh

peer lifecycle chaincode commit -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --tls $CORE_PEER_TLS_ENABLED --cafile $ORDERER_CA -C samplechannel --name Carshowroom --peerAddresses localhost:7051 --tlsRootCertFiles $CORE_PEER_TLS_ROOTCERT_FILE_ORG1 --peerAddresses localhost:9051 --tlsRootCertFiles $CORE_PEER_TLS_ROOTCERT_FILE_ORG2 --version 1.0 --sequence 1 --init-required
peer chaincode invoke -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --tls $CORE_PEER_TLS_ENABLED --cafile $ORDERER_CA -C samplechannel -n Carshowroom --peerAddresses localhost:7051 --tlsRootCertFiles $CORE_PEER_TLS_ROOTCERT_FILE_ORG1 --peerAddresses localhost:9051 --tlsRootCertFiles $CORE_PEER_TLS_ROOTCERT_FILE_ORG2 --isInit -c '{"Args":["init"]}'
peer chaincode invoke -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --tls $CORE_PEER_TLS_ENABLED --cafile $ORDERER_CA -C samplechannel -n Carshowroom --peerAddresses localhost:7051 --tlsRootCertFiles $CORE_PEER_TLS_ROOTCERT_FILE_ORG1 --peerAddresses localhost:9051 --tlsRootCertFiles $CORE_PEER_TLS_ROOTCERT_FILE_ORG2 -c '{"Args":["addNewCar","2","Ford","John","1000"]}'
peer chaincode invoke -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --tls $CORE_PEER_TLS_ENABLED --cafile $ORDERER_CA -C samplechannel -n Carshowroom --peerAddresses localhost:7051 --tlsRootCertFiles $CORE_PEER_TLS_ROOTCERT_FILE_ORG1 --peerAddresses localhost:9051 --tlsRootCertFiles $CORE_PEER_TLS_ROOTCERT_FILE_ORG2 -c '{"Args":["getCarById","2"]}'

# To see logs of chain code
 ./monitordocker.sh fabric_test

#TODO
peer channel fetch newest -c samplechannel -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --tls $CORE_PEER_TLS_ENABLED --cafile $ORDERER_CA
peer channel getinfo -c samplechannel -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --tls $CORE_PEER_TLS_ENABLED --cafile $ORDERER_CA
# Upgrade a chaincode, 
# deploy another chaincode 

